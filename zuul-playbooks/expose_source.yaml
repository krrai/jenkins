# expose_source.yaml - Expose Zuul-generated sources on source-hosting nodes
#
# This playbook is meant to be triggered from Zuul as a part of a job rather
# then manually via `ansible-playbook`.
#
# This playbook does not need an inventory file, instead, host details are
# configured via the following extra variables:
#
# - source_host:             The name of the Jenkins master host to trigger the
#                            job on
# - source_host_user:        The username to use to connect to the Jenkins
#                            master via SSH
# - source_host_ssh_hostkey: The SSH hostkey of the Jenkins master host, to be
#                            used while connecting to it
#
# This playbook assumes that the source host had been configured using the
# `zuul_node_setup.yaml` playbook.
#
# Apart from exposing sources, this playbook will generate a `source_table.txt`
# file on the local host to be used by the `trigger_gate_job.yaml` playbook.
#
---
- hosts: localhost
  gather_facts: no
  tasks:
    - name: Add source host to inventory
      add_host:
        name: source-host
        ansible_host: "{{ source_host }}"
        ansible_user: "{{ source_host_user }}"

    - name: Add source host SSH hostkey
      known_hosts:
        name: "{{ source_host }}"
        key: "{{ source_host_ssh_hostkey }}"

- hosts: source-host
  vars:
    git_http_shared_dir: /var/www/git
    push_branch_name:
      "{{ zuul.buildset}}-{{ ansible_facts['date_time']['epoch'] }}"
    push_url_base: "{{
      'ssh://' + ansible_host|default(inventory_hostname)
      + '/' + git_http_shared_dir
    }}"
  tasks:
    - name: Init exposed Git repos
      command: |
        git init --bare --shared \
          {{ git_http_shared_dir + '/' + item.short_name | quote }}
      args:
        creates: "{{ git_http_shared_dir }}/{{ item.short_name }}/refs"
      loop: "{{ zuul.projects.values() | list }}"

    - name: Find source revisions to push
      delegate_to: localhost
      command: "git rev-parse HEAD"
      args:
        chdir: "{{ zuul.executor.work_root }}/{{ item.src_dir }}"
      loop: "{{ zuul.projects.values() | list }}"
      register: refs_to_push_out

    - name: Push exposed sources
      delegate_to: localhost
      command: |
        git push \
          {{ push_url_base + '/' + item.item.short_name|quote }} \
          {{ item.stdout|trim }}:refs/heads/{{ push_branch_name }}
      args:
        chdir: "{{ zuul.executor.work_root }}/{{ item.item.src_dir }}"
      loop: "{{ refs_to_push_out.results }}"

    - name: Generate source table
      vars:
        source_base_url: "http://{{ ansible_facts['nodename'] }}/git"
        source_branch: "{{ push_branch_name }}"
      set_fact:
        sources_table: |
          {% for project in zuul.projects.values() %}
          {{ source_base_url }}/{{ project.short_name }} {{
          project.checkout }} {{ source_branch }}
          {% endfor %}

    - name: Write source information
      delegate_to: localhost
      template:
        src: source_table.txt.j2
        dest: "{{ zuul.executor.log_root }}/source_table.txt"

    - name: Return push information to Zuul
      delegate_to: localhost
      zuul_return:
        data:
          sources_table: "{{ sources_table }}"

    - name: Find older branches
      delegate_to: localhost
      command: |
        git ls-remote \
          {{ push_url_base + '/' + item.short_name|quote }} \
          *-[0-9]*
      args:
        chdir: "{{ zuul.executor.work_root }}/{{ item.src_dir }}"
      register: ls_remote_out
      changed_when: False
      loop: "{{ zuul.projects.values() | list }}"

    - name: Delete older branches
      vars:
        branch_refs: |-
          {%
            for ref, ctime in
              item.stdout
              |regex_findall('(?m)^[0-9a-f]+\s+(refs/\S+/\S+-([0-9]+))$')
              if (ansible_facts['date_time']['epoch']|int - ctime|int) > 48 * 3600
          -%}
            :{{ ref + ' ' }}
          {%- endfor %}
      delegate_to: localhost
      command: |
        git push \
          {{ push_url_base + '/' + item.item.short_name|quote }} \
          {{ branch_refs }}
      args:
        chdir: "{{ zuul.executor.work_root }}/{{ item.item.src_dir }}"
      when: branch_refs|length > 0
      loop: "{{ ls_remote_out.results }}"
