- job-template: &standard-github-pipeline
    name: '{org}_{project}_standard-check-pr'
    project-type: pipeline
    quiet-period: 0
    concurrent: true
    properties:
      - build-discarder:
          days-to-keep: 14
      - github:
          url: 'https://github.com/{org}/{project}'
      - inject:
          properties-content: |
            SCM_NOTIFICATION_CREDENTIALS={github-auth-id}
            DEFAULT_SCM_URL_PREFIX={default-scm-url-prefix}
            STDCI_SCM_URL={stdci-scm-url}
            STDCI_SCM_REFSPEC={stdci-scm-refspec}
            CLONE_DIR_NAME={clone-dir-name}
            GIT_AUTHOR_NAME={git-config-name}
            GIT_AUTHOR_EMAIL={git-config-email}
            GIT_COMMITTER_NAME={git-config-name}
            GIT_COMMITTER_EMAIL={git-config-email}
            LOADER_NODE_LABEL={loader-node-label}
    triggers:
      - github-pull-request: &github-pull-trigger-base
          org-list:
            - '{org}'
          trigger-phrase: '^ci +(please +)?(test|build)( +please)?$'
          only-trigger-phrase: false
          github-hooks: true
          permit-all: false
          auto-close-on-fail: false
          allow-whitelist-orgs-as-admins: true
          cancel-builds-on-update: '{abort-on-update}'
          auth-id: '{github-auth-id}'
          status-context: standard-ci
          triggered-status: 'Queued for testing'
          started-status: 'Running tests'
          success-status: 'All tests passed'
          failure-status: 'Some tests failed'
          error-status: 'System error during testing'
    dsl: !include-raw-escape: groovy-scripts/pipeline-loader.groovy

- job-template:
    <<: *standard-github-pipeline
    name: '{org}_{project}_standard-on-ghpush'
    # Push ordering is important so disable concurrency
    concurrent: false
    # Job will be triggered by another job, so no need for its own trigger
    # configuration
    triggers: {}

- job-group:
    name: '{org}_{project}_standard-gh-jobs'
    jobs:
      - '{org}_{project}_standard-check-pr'
      - '{org}_{project}_standard-on-ghpush'

- job-template:
    name: 'standard-webhook-trigger'
    project-type: pipeline
    # This may be triggered by push events and needs to preserve order so
    # disable concurrency
    concurrent: false
    quiet-period: 0
    properties:
      - build-discarder:
          days-to-keep: 14
          artifact-num-to-keep: 60
    parameters:
      - string:
          name: x_github_event
      - string:
          name: x_github_delivery
      - string:
          name: GH_EV_REPO_name
      - string:
          name: GH_EV_REPO_full_name
      - string:
          name: GH_EV_REPO_owner_name
      - string:
          name: GH_EV_REPO_owner_login
      - string:
          name: GH_EV_REF
      - string:
          name: GHPUSH_SHA
      - string:
          name: GHPUSH_PUSHER_name
      - string:
          name: GHPUSH_PUSHER_email
      - string:
          name: GH_EV_HEAD_COMMIT_id
      - string:
          name: GH_EV_HEAD_COMMIT_url
    triggers:
      - raw:
          xml: |
            <org.jenkinsci.plugins.gwt.GenericTrigger plugin="generic-webhook-trigger@1.19">
              <spec></spec>
              <genericVariables>
                <org.jenkinsci.plugins.gwt.GenericVariable>
                  <expressionType>JSONPath</expressionType>
                  <key>GH_EV_REPO</key>
                  <value>repository</value>
                  <regexpFilter></regexpFilter>
                </org.jenkinsci.plugins.gwt.GenericVariable>
                <org.jenkinsci.plugins.gwt.GenericVariable>
                  <expressionType>JSONPath</expressionType>
                  <key>GH_EV_REF</key>
                  <value>ref</value>
                  <regexpFilter></regexpFilter>
                </org.jenkinsci.plugins.gwt.GenericVariable>
                <org.jenkinsci.plugins.gwt.GenericVariable>
                  <expressionType>JSONPath</expressionType>
                  <key>GHPUSH_SHA</key>
                  <value>after</value>
                  <regexpFilter></regexpFilter>
                </org.jenkinsci.plugins.gwt.GenericVariable>
                <org.jenkinsci.plugins.gwt.GenericVariable>
                  <expressionType>JSONPath</expressionType>
                  <key>GHPUSH_PUSHER</key>
                  <value>pusher</value>
                  <regexpFilter></regexpFilter>
                </org.jenkinsci.plugins.gwt.GenericVariable>
                <org.jenkinsci.plugins.gwt.GenericVariable>
                  <expressionType>JSONPath</expressionType>
                  <key>GH_EV_ISSUE</key>
                  <value>issue</value>
                  <regexpFilter></regexpFilter>
                </org.jenkinsci.plugins.gwt.GenericVariable>
                <org.jenkinsci.plugins.gwt.GenericVariable>
                  <expressionType>JSONPath</expressionType>
                  <key>GH_EV_HEAD_COMMIT</key>
                  <value>head_commit</value>
                  <regexpFilter></regexpFilter>
                </org.jenkinsci.plugins.gwt.GenericVariable>
              </genericVariables>
              <regexpFilterText></regexpFilterText>
              <regexpFilterExpression></regexpFilterExpression>
              <genericHeaderVariables>
                <org.jenkinsci.plugins.gwt.GenericHeaderVariable>
                  <key>x-github-event</key>
                  <regexpFilter></regexpFilter>
                </org.jenkinsci.plugins.gwt.GenericHeaderVariable>
                <org.jenkinsci.plugins.gwt.GenericHeaderVariable>
                  <key>x-github-delivery</key>
                  <regexpFilter></regexpFilter>
                </org.jenkinsci.plugins.gwt.GenericHeaderVariable>
              </genericHeaderVariables>
            </org.jenkinsci.plugins.gwt.GenericTrigger>
    dsl: !include-raw-escape: groovy-scripts/standard-webhook-trigger.groovy

- job-template:
    name: standard-manual-runner
    project-type: pipeline
    quiet-period: 0
    properties:
      - build-discarder:
          days-to-keep: 14
          artifact-num-to-keep: 60
      - inject:
          properties-content: |
            DEFAULT_SCM_URL_PREFIX={default-scm-url-prefix}
            STDCI_SCM_URL={stdci-scm-url}
            STDCI_SCM_REFSPEC={stdci-scm-refspec}
            GIT_AUTHOR_NAME={git-config-name}
            GIT_AUTHOR_EMAIL={git-config-email}
            GIT_COMMITTER_NAME={git-config-name}
            GIT_COMMITTER_EMAIL={git-config-email}
            LOADER_NODE_LABEL={loader-node-label}
    parameters:
      - string:
          name: STD_CI_CLONE_URL
          description: A Git repo URL to clone the project from
      - string:
          name: CLONE_DIR_NAME
          default: ''
          description: |
            A directory name where the source will be cloned to. Leave empty
            if you're not sure what it is.
      - string:
          name: STD_CI_REFSPEC
          description: Refspec to the Git commit to run jobs on
          default: refs/heads/master
      - string:
          name: STD_CI_STAGE
          description: The standard-CI stage to emulate
          default: check-patch
    dsl: !include-raw-escape: groovy-scripts/pipeline-loader.groovy

- job-template:
    name: '{project}_standard-check-patch'
    project-type: pipeline
    quiet-period: 0
    concurrent: true
    properties:
      - build-discarder:
          days-to-keep: 14
          artifact-num-to-keep: 60
      - inject:
          properties-content: |
            GERRIT_TRIGGER_CI_VOTE_LABEL=''
            SCM_NOTIFICATION_CREDENTIALS=''
            DEFAULT_SCM_URL_PREFIX={default-scm-url-prefix}
            STDCI_SCM_URL={stdci-scm-url}
            STDCI_SCM_REFSPEC={stdci-scm-refspec}
            CLONE_DIR_NAME={clone-dir-name}
            GIT_AUTHOR_NAME={git-config-name}
            GIT_AUTHOR_EMAIL={git-config-email}
            GIT_COMMITTER_NAME={git-config-name}
            GIT_COMMITTER_EMAIL={git-config-email}
            LOADER_NODE_LABEL={loader-node-label}
    triggers:
      - gerrit:
          server-name: '{gerrit-server}'
          trigger-on:
            - patchset-created-event:
                exclude-drafts: true
                exclude-no-code-change: true
            - draft-published-event
            - comment-added-contains-event:
                comment-contains-value: '^ci +(please +)?(test|build)( +please)?$'
          projects:
            - project-compare-type: 'PLAIN'
              project-pattern: '{gerrit-subpath}{project}'
              branches:
                - branch-compare-type: 'REG_EXP'
                  branch-pattern: '.*'
          escape-quotes: true
          override-votes: true
          gerrit-build-successful-codereview-value: 1
          gerrit-build-failed-codereview-value: -1
          gerrit-build-unstable-codereview-value: -1
          notbuilt-message: |
            To avoid overloading the infrastructure, a whitelist for
            running gerrit triggered jobs has been set in place, if
            you feel like you should be in it, please contact infra at
            ovirt dot org.
    dsl: !include-raw-escape: groovy-scripts/pipeline-loader.groovy

- job-template:
    name: '{project}_standard-on-merge'
    project-type: pipeline
    quiet-period: 0
    concurrent: false
    properties:
      - build-discarder:
          days-to-keep: 14
          artifact-num-to-keep: 60
      - inject:
          properties-content: |
            GERRIT_TRIGGER_CI_VOTE_LABEL=''
            SCM_NOTIFICATION_CREDENTIALS=''
            DEFAULT_SCM_URL_PREFIX={default-scm-url-prefix}
            STDCI_SCM_URL={stdci-scm-url}
            STDCI_SCM_REFSPEC={stdci-scm-refspec}
            CLONE_DIR_NAME={clone-dir-name}
            GIT_AUTHOR_NAME={git-config-name}
            GIT_AUTHOR_EMAIL={git-config-email}
            GIT_COMMITTER_NAME={git-config-name}
            GIT_COMMITTER_EMAIL={git-config-email}
            LOADER_NODE_LABEL={loader-node-label}
    triggers:
      - gerrit:
          server-name: '{gerrit-server}'
          trigger-on:
            - change-merged-event
            - comment-added-contains-event:
                comment-contains-value: '^ci +(please +)?re-merge( +please)?$'
          projects:
            - project-compare-type: 'PLAIN'
              project-pattern: '{gerrit-subpath}{project}'
              branches:
                - branch-compare-type: 'REG_EXP'
                  branch-pattern: '.*'
          escape-quotes: true
          override-votes: true
          gerrit-build-successful-codereview-value: 1
          gerrit-build-failed-codereview-value: -1
          gerrit-build-unstable-codereview-value: -1
          notbuilt-message: |
            To avoid overloading the infrastructure, a whitelist for
            running gerrit triggered jobs has been set in place, if
            you feel like you should be in it, please contact infra at
            ovirt dot org.
    dsl: !include-raw-escape: groovy-scripts/pipeline-loader.groovy

- job-group:
    name: '{project}_standard-gerrit-jobs'
    jobs:
      - '{project}_standard-check-patch'
      - '{project}_standard-on-merge'
