- job-template: &standard-template-basic
    name: 'standard-template-basic'
    node: '{node-filter}'
    parameters:
      - gerrit-params:
          branch: '{branch}'
    concurrent: true
    properties:
      - inject: &standard-template-properties-inject
          properties-content: |
            PROJECT: {project}
            GERRIT_TRIGGER_CI_VOTE_LABEL:
            STD_VERSION: {branch}
            STDCI_GIT_CONFIG_NAME: {git-config-name}
            STDCI_GIT_CONFIG_EMAIL: {git-config-email}
      - throttle: &standard-template-properties-throttle
          max-per-node: 1
          max-total: 30
          option: project
      - build-discarder:
          days-to-keep: 14
          artifact-num-to-keep: 60
    scm:
      - '{scmtype}_scm':
          project: '{project}'
          git-server: '{git-server}'
          git-proto: '{git-proto}'
          git-config-name: '{git-config-name}'
          git-config-email: '{git-config-email}'
          gerrit-subpath: '{gerrit-subpath}'
      # Non-gerrit scm, me have to specify the branch
      - jenkins:
          branch: master
          git-server: '{git-server}'
      - jenkins-whitelist:
          git-server: '{git-server}'
    triggers:
      - '{stage}_{scmtype}_trigger_{trigger}':
          project: '{project}'
          trigger-repo: '{trigger-repo}'
          gerrit-subpath: '{gerrit-subpath}'
          branch: '{branch}'
          trigger-times: '{trigger-times}'
          gerrit-server: '{gerrit-server}'
    notifications:
      - http:
          url: '{notification-url}'
          format: JSON
          event: completed
          timeout: 40000
          log: 0
    wrappers:
        - default-wrapper
        - credentials-binding:
            - username-password-separated:
                credential-id: 'ci-containers_intermediate-repository'
                username: 'CI_CONTAINERS_INTERMEDIATE_REPO_USERNAME'
                password: 'CI_CONTAINERS_INTERMEDIATE_REPO_PASSWORD'
            - file:
                credential-id: 'ci_secrets_file'
                variable: 'CI_SECRETS_FILE'


- job-template: &standard-template
      <<: *standard-template-basic
      name: '{project}_{version}_{stage}-{distro}-{arch}'
      builders:
        - '{stage}_builder':
            project: '{project}'
            distro: '{distro}'
            arch: '{arch}'
      publishers:
        - whitelist
        - standard-publisher:
            project: '{project}'

- job-template:
      <<: *standard-template
      name: 'java-ovirt-engine-sdk4_{version}_{stage}-{distro}-{arch}'
      scm:
        - 'ovirt-engine-sdk-java-gerrit':
            git-server: '{git-server}'
        # Non-gerrit scm, we have to specify the branch
        - jenkins:
            branch: master
            git-server: '{git-server}'
        - jenkins-whitelist:
            git-server: '{git-server}'
      builders:
        - '{stage}_builder':
            project: 'ovirt-engine-sdk-java'
            distro: '{distro}'
            arch: '{arch}'

- job-template:
      <<: *standard-template
      name: 'python-ovirt-engine-sdk4_{version}_{stage}-{distro}-{arch}'
      scm:
        - 'ovirt-engine-sdk-gerrit':
            git-server: '{git-server}'
        # Non-gerrit scm, we have to specify the branch
        - jenkins:
            branch: master
            git-server: '{git-server}'
        - jenkins-whitelist:
            git-server: '{git-server}'
      builders:
        - '{stage}_builder':
            project: 'ovirt-engine-sdk'
            distro: '{distro}'
            arch: '{arch}'

- job-template: &standard-template-deploy
      <<: *standard-template
      name: '{project}_{version}_build-artifacts-{distro}-{arch}'
      publishers:
        - whitelist
        - standard-publisher:
            project: '{project}'
        - 'build-artifacts_publisher-when_{trigger}':
            project: '{project}'
            version: '{version}'
            distro: '{distro}'
            email-to: '{email-to}'
            reponame: ovirt
            repotype: experimental

- job-template:
      <<: *standard-template
      name: '{project}_{version}_{stage}-on-demand-{distro}-{arch}'
      triggers:
        - '{stage}-on-demand_{scmtype}_trigger_on-comment-added':
            project: '{project}'
            branch: '{branch}'
            gerrit-subpath: '{gerrit-subpath}'
            trigger-times: '{trigger-times}'
            gerrit-server: '{gerrit-server}'
      properties:
        - inject: *standard-template-properties-inject
        - throttle:
            max-per-node: 1
            max-total: 1
            option: project
        - build-discarder:
            days-to-keep: 14
            artifact-num-to-keep: 60

- job-template:
      <<: *standard-template
      name: 'python-ovirt-engine-sdk4_{version}_{stage}-on-demand-{distro}-{arch}'
      triggers:
        - '{stage}-on-demand_{scmtype}_trigger_on-comment-added':
            project: '{project}'
            branch: '{branch}'
            gerrit-subpath: '{gerrit-subpath}'
            trigger-times: '{trigger-times}'
            gerrit-server: '{gerrit-server}'
      properties:
        - inject: *standard-template-properties-inject
        - throttle:
            max-per-node: 1
            max-total: 1
            option: project
        - build-discarder:
            days-to-keep: 14
            artifact-num-to-keep: 60

- job-template:
      <<: *standard-template
      name: 'ovirt-engine-sdk_{version}_build-artifacts-{distro}-{arch}'

- job-template:
      <<: *standard-template
      name: 'python-ovirt-engine-sdk4_{version}_build-artifacts-{distro}-{arch}'

- job-template:
      <<: *standard-template
      name: 'ovirt-engine-sdk-java_{version}_build-artifacts-{distro}-{arch}'

- job-template:
      <<: *standard-template
      name: 'java-ovirt-engine-sdk4_{version}_build-artifacts-{distro}-{arch}'

- job-template:
      <<: *standard-template
      name: '{project}_{version}_build-artifacts-{distro}-ppc64le'

- job-template:
    <<: *standard-template-deploy
    name: 'ovirt-appliance_{version}_build-artifacts-{distro}-{arch}'
    properties:
      - inject: *standard-template-properties-inject
      - throttle: *standard-template-properties-throttle
      - build-discarder:
          num-to-keep: 10
          artifact-num-to-keep: 2

- job-template:
    <<: *standard-template
    name: 'jenkins_{version}_{stage}-{distro}-{arch}'
    scm:
      - jenkins-gerrit:
          project: '{project}'
          git-server: '{git-server}'
          git-proto: '{git-proto}'
          git-config-name: '{git-config-name}'
          git-config-email: '{git-config-email}'
          gerrit-subpath: '{gerrit-subpath}'
      - jenkins-whitelist:
          git-server: '{git-server}'
    triggers:
      - '{stage}_{scmtype}_jenkins-trigger_{trigger}':
          project: '{project}'
          gerrit-subpath: '{gerrit-subpath}'
          trigger-repo: '{trigger-repo}'
          branch: '{branch}'
          trigger-times: '{trigger-times}'
          gerrit-server: '{gerrit-server}'

- job-template:
    <<: *standard-template-deploy
    name: 'ovirt-engine_{version}_build-artifacts-{distro}-{arch}'
    properties:
      - inject: *standard-template-properties-inject
      - throttle: *standard-template-properties-throttle
      - build-discarder:
          days-to-keep: 14
          artifact-num-to-keep: 20

- job-template:
    <<: *standard-template-deploy
    name: '{project}_{version}_build-artifacts-{distro}-{arch}{_big_artifacts}'
    properties:
      - inject: *standard-template-properties-inject
      - throttle: *standard-template-properties-throttle
      - build-discarder:
          num-to-keep: 14
          artifact-num-to-keep: 4

# the following templates are for the new pipeline jobs
- job-template: &standard-pipeline
    <<: *standard-template-basic
    name: '{project}_{version}_{stage}-pipeline'
    project-type: pipeline
    dsl: !include-raw: groovy-scripts/standard-pipeline.groovy
    properties:
        - build-discarder:
            num-to-keep: 120
            artifact-num-to-keep: 20

- job-template: &deploy-job-template
    name: 'deploy-to-{reponame}_{repotype}_{version}'
    node: '{node-filter}'
    properties:
      - throttle:
          max-per-node: 1
          max-total: 1
          option: project
      - build-discarder:
          days-to-keep: 14
          artifact-num-to-keep: 2
    parameters:
      - string:
          name: BUILD_ID
          default: ''
          description: |
            Id of this build, will be also the suffix of the {repotype} repo created
      - string:
          name: BUILD_ARTIFACTS_JOBS
          default: ''
          description: |
            Comma separated list of jobs to deploy to {reponame} {repotype} repo
    builders:
      - shell: |
          [[ "$BUILD_ARTIFACTS_JOBS" == "" ]] && exit 1
          jobs=(${{BUILD_ARTIFACTS_JOBS//,/ }})
          for line in \
              "repo-extra-dir:{version}" \
              "repo-extra-dir:$BUILD_ID" \
              "${{jobs[@]}}";
          do
              echo "$line"
          done \
          | ssh \
              -o StrictHostKeyChecking=no \
              deploy-{reponame}-{repotype}@resources.ovirt.org
    wrappers:
      - ssh-agent-credentials:
          users:
            - c7ecbee7-5352-46da-a3c4-5aea24cd3de0
    publishers:
      - email-infra
      - trigger-parameterized-builds:
        - project: 'test-repo_{reponame}_{repotype}_{version}'
          condition: SUCCESS


# should not be used anymore, only by lago until migrated, used the
# deploy-to-* template instead
- job-template:
    <<: *deploy-job-template
    name: '{project}_{version}_github_deploy-to-{reponame}-snapshot'
    node: '{node-filter}'
    builders:
      - shell: |
          jobs=(${{BUILD_ARTIFACTS_JOBS//,/ }})
          for line in "repo-suffix:.$BUILD_ID" "${{jobs[@]}}"; do
              echo "$line"
          done \
          | ssh \
              -o StrictHostKeyChecking=no \
              deploy-{reponame}-snapshot@resources.ovirt.org
    publishers: []

- job-template:
    <<: *standard-template
    name: '{project}_{version}_build-artifacts-manual-{distro}-{arch}'
    parameters:
      - gerrit-params:
          branch: '{branch}'
      - file:
          name: TARBALL_FILE
          description: 'Tarball with the sources to build'
    triggers:
      - 'trigger_{trigger}':
          project: '{project}'
          branch: '{branch}'

## Github specific jobs
- github-common: &github-common
    name: github-common
    with-deploy: always
    properties:
      - inject: *standard-template-properties-inject
      - github:
          url: 'https://github.com/{org}/{project}'
      - build-discarder:
          num-to-keep: 120
          artifact-num-to-keep: 20
    scm:
      - 'github-pull':
          project: '{project}'
          org: '{org}'
          github-auth-id: '{github-auth-id}'
          git-config-name: '{git-config-name}'
          git-config-email: '{git-config-email}'
      - jenkins:
          branch: master
          git-server: '{git-server}'
    parameters:
      - github-params

## github specific jobs

- job-template:
    <<: *standard-template
    <<: *github-common
    name: '{project}_{version}_github_check-patch-{distro}-{arch}'
    triggers:
      - github-pull-check-patch:
          project: '{project}'
          org: '{org}'
          github-auth-id: '{github-auth-id}'
          branch: '{branch}'
          distro: '{distro}'
          arch: '{arch}'

- job-template: &github-template-deploy
    <<: *standard-template
    <<: *github-common
    name: '{project}_{version}_github_{stage}-{distro}-{arch}'
    triggers:
      - 'github-build-check':
          project: '{project}'
          stage: build_artifacts
          org: '{org}'
          github-auth-id: '{github-auth-id}'
          branch: '{branch}'
          distro: '{distro}'
          arch: '{arch}'
    publishers:
      - '{stage}_publisher':
          project: '{project}'
          version: '{version}'
          with-deploy: '{with-deploy}'

- job-template:
    <<: *standard-template
    <<: *github-common
    name: '{project}_{version}_github_build-artifacts-manual-{distro}-{arch}'
    parameters:
      - github-params:
          branch: master
      - file:
          name: TARBALL_FILE
          description: 'Tarball with the sources to build'
    triggers:
      - 'trigger_{trigger}':
          project: '{project}'
          branch: '{branch}'


- job-template:
    <<: *standard-pipeline
    <<: *github-common
    name: '{project}_{version}_github_{stage}-pipeline'
    triggers:
      - dummy-trigger:
          project: '{project}'
          branch: '{branch}'

# This is needed because workflow/pipeline jobs don't support github
# trigger yet
- job-template:
    <<: *standard-template
    <<: *github-common
    name: '{project}_{version}_github_{stage}-trigger'
    concurrent: false
    triggers:
      - 'github-pull-check-merged':
          project: '{project}'
          org: '{org}'
          github-auth-id: '{github-auth-id}'
          branch: '{branch}'
          distro: '{distro}'
          arch: '{arch}'
    scm:
      - 'github':
          project: '{project}'
          org: '{org}'
          branch: '{branch}'
          github-auth-id: '{github-auth-id}'
          git-config-name: '{git-config-name}'
          git-config-email: '{git-config-email}'
    builders:
      - trigger-builds:
          - project: '{project}_{version}_github_{stage}-pipeline'
            current-parameters: true
            block: true
    publishers:
      - github-pull-request-merge:
          only-admins-merge: true
          disallow-own-code: false
          fail-on-non-merge: true
          delete-on-merge: true
      - github-notifier
